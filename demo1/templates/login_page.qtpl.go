// Code generated by qtc from "login_page.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line login_page.qtpl:1
package templates

//line login_page.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line login_page.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line login_page.qtpl:1
func StreamLoginPage(qw422016 *qt422016.Writer, data LoginData) {
//line login_page.qtpl:1
	qw422016.N().S(`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>

    <!-- Latest compiled and minified CSS -->
	  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous" />

	  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" crossorigin="anonymous" />

    <link href="https://lipis.github.io/bootstrap-social/bootstrap-social.css" rel="stylesheet" >

    <script>
// https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

var config = {
          `)
//line login_page.qtpl:22
	for key, o2ConfigMore := range data.OAuth2Configs.ConfigMoreMap {
//line login_page.qtpl:22
		qw422016.N().S(`

`)
//line login_page.qtpl:24
		qw422016.N().S(key)
//line login_page.qtpl:24
		qw422016.N().S(`: {
  authUri: '`)
//line login_page.qtpl:25
		qw422016.N().S(o2ConfigMore.AuthURL(key + "-" + data.OAuth2State))
//line login_page.qtpl:25
		qw422016.N().S(`',
  redirectUri: '`)
//line login_page.qtpl:26
		qw422016.N().S(o2ConfigMore.RedirectURL())
//line login_page.qtpl:26
		qw422016.N().S(`'
},
          `)
//line login_page.qtpl:28
	}
//line login_page.qtpl:28
	qw422016.N().S(`
}

var OAuthCode = function(cfg) {
    var t = this;
    t.config = config;
    t.loginPopup  = function(service) {
        var cfg = this.config;
        t.loginPopupUri(cfg[service]['authUri'], cfg[service]['redirectUri']);
    }
    t.loginPopupUri = function(authUri, redirectUri) {
        var popup      = window.open(authUri, 'windowname1', 'width=800, height=600'); 
        var pollOAuth  = window.setInterval(function() {

          console.log("BASE_URI: " + '`)
//line login_page.qtpl:42
	qw422016.N().S(data.BaseURI)
//line login_page.qtpl:42
	qw422016.N().S(`');
          popup.postMessage("isoauth2redirectfinished", '`)
//line login_page.qtpl:43
	qw422016.N().S(data.BaseURI)
//line login_page.qtpl:43
	qw422016.N().S(`');

          /*
            try {
                console.log("DOCUMENT_URI: " + win.document.URL);
                console.log("REDIRECT_URI: " + redirectUri);
                if (win.document.URL.indexOf(redirectUri) != -1) {
                    window.clearInterval(pollOAuth);
                    win.close();
                    location.reload();
                }
            } catch(e) {
                console.log(e)
            }*/
        }, 500);
    }
}
var oauth = new OAuthCode(config);

function receiveMessage(event) {
  console.log("RECEIVED ["+event.origin+"]["+event.data+"]");
  if (event.origin !== '`)
//line login_page.qtpl:64
	qw422016.N().S(data.BaseURI)
//line login_page.qtpl:64
	qw422016.N().S(`') {
    return;
  }
  if (event.data == 'oauth2redirectisfinished') {
    location.reload();
  }
}
window.addEventListener("message", receiveMessage, false);

    </script>

  </head>

  <body>
    <div class="container">
      <div class="row">
        <div class="col-sm-12" style="text-align:center">
          <h1>Beego OAuth 2.0 Demo</h1>
        </div>
      </div>

      <div class="row">
        <div class="col-sm-4"></div>
              
        <div class="col-sm-4 social-buttons">
          <h3 class="text-center">Login</h3>

          `)
//line login_page.qtpl:91
	if data.OAuth2Configs.Has("google0") {
//line login_page.qtpl:91
		qw422016.N().S(`
          <a class="btn btn-block btn-social btn-google" onclick="oauth.loginPopup('google0'); return false;">
            <span class="fa fa-google"></span> Sign in with Google
          </a>
          `)
//line login_page.qtpl:95
	}
//line login_page.qtpl:95
	qw422016.N().S(`

          `)
//line login_page.qtpl:97
	if data.OAuth2Configs.Has("facebook0") {
//line login_page.qtpl:97
		qw422016.N().S(`
          <a class="btn btn-block btn-social btn-facebook" onclick="oauth.loginPopup('facebook'); return false;">
            <span class="fa fa-facebook"></span> Sign in with Facebook
          </a>
          `)
//line login_page.qtpl:101
	}
//line login_page.qtpl:101
	qw422016.N().S(`

          `)
//line login_page.qtpl:103
	if data.OAuth2Configs.Has("ringcentral") {
//line login_page.qtpl:103
		qw422016.N().S(`
          <div style="height:0.5em"></div>
          <button type="button" class="btn btn-warning btn-md" style="width:100%" onclick="oauth.loginPopup('ringcentral'); return false;">
            Sign in with RingCentral
          </button>
          `)
//line login_page.qtpl:108
	}
//line login_page.qtpl:108
	qw422016.N().S(`

          `)
//line login_page.qtpl:110
	if data.OAuth2Configs.Has("aha") {
//line login_page.qtpl:110
		qw422016.N().S(`
          <div style="height:0.5em"></div>
          <button type="button" class="btn btn-info btn-md" style="width:100%" onclick="oauth.loginPopup('aha'); return false;">
            Sign in with Aha!
          </button>
          `)
//line login_page.qtpl:115
	}
//line login_page.qtpl:115
	qw422016.N().S(`
          
          <p style="margin-top:1em;width:100%;text-align:center"><a href="https://`)
//line login_page.qtpl:117
	qw422016.E().S(DemoRepoURI)
//line login_page.qtpl:117
	qw422016.N().S(`">`)
//line login_page.qtpl:117
	qw422016.E().S(DemoRepoURI)
//line login_page.qtpl:117
	qw422016.N().S(`</a>

        </div>
      </div>
    </div>
  </body>
</html>
`)
//line login_page.qtpl:124
}

//line login_page.qtpl:124
func WriteLoginPage(qq422016 qtio422016.Writer, data LoginData) {
//line login_page.qtpl:124
	qw422016 := qt422016.AcquireWriter(qq422016)
//line login_page.qtpl:124
	StreamLoginPage(qw422016, data)
//line login_page.qtpl:124
	qt422016.ReleaseWriter(qw422016)
//line login_page.qtpl:124
}

//line login_page.qtpl:124
func LoginPage(data LoginData) string {
//line login_page.qtpl:124
	qb422016 := qt422016.AcquireByteBuffer()
//line login_page.qtpl:124
	WriteLoginPage(qb422016, data)
//line login_page.qtpl:124
	qs422016 := string(qb422016.B)
//line login_page.qtpl:124
	qt422016.ReleaseByteBuffer(qb422016)
//line login_page.qtpl:124
	return qs422016
//line login_page.qtpl:124
}
